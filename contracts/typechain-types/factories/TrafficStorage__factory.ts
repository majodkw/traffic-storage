/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  TrafficStorage,
  TrafficStorageInterface,
} from "../TrafficStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "trafficLightId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum TrafficStorage.DataType",
        name: "dataType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "RecordStored",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "trafficLightId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "enum TrafficStorage.DataType",
        name: "dataType",
        type: "uint8",
      },
    ],
    name: "getRecord",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "trafficLightId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "enum TrafficStorage.DataType",
        name: "dataType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "storeRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a3b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630b4dd4a61461003b578063cc946bff1461006b575b600080fd5b61005560048036038101906100509190610354565b610087565b6040516100629190610458565b60405180910390f35b6100856004803603810190610080919061047a565b6101cb565b005b6060600080868660405161009c929190610560565b9081526020016040518091039020600085815260200190815260200160002060008460018111156100d0576100cf610579565b5b60018111156100e2576100e1610579565b5b815260200190815260200160002080546100fb906105d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610127906105d7565b80156101745780601f1061014957610100808354040283529160200191610174565b820191906000526020600020905b81548152906001019060200180831161015757829003601f168201915b5050505050905060008151116101bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b690610654565b60405180910390fd5b80915050949350505050565b8181600088886040516101df929190610560565b90815260200160405180910390206000878152602001908152602001600020600086600181111561021357610212610579565b5b600181111561022557610224610579565b5b8152602001908152602001600020918261024092919061085a565b507f7710679cfa2df2b633e581a190fa5cced42aeb977d5825525564d396d531b97086868686868660405161027a969594939291906109ae565b60405180910390a1505050505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126102b9576102b8610294565b5b8235905067ffffffffffffffff8111156102d6576102d5610299565b5b6020830191508360018202830111156102f2576102f161029e565b5b9250929050565b6000819050919050565b61030c816102f9565b811461031757600080fd5b50565b60008135905061032981610303565b92915050565b6002811061033c57600080fd5b50565b60008135905061034e8161032f565b92915050565b6000806000806060858703121561036e5761036d61028a565b5b600085013567ffffffffffffffff81111561038c5761038b61028f565b5b610398878288016102a3565b945094505060206103ab8782880161031a565b92505060406103bc8782880161033f565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b838110156104025780820151818401526020810190506103e7565b60008484015250505050565b6000601f19601f8301169050919050565b600061042a826103c8565b61043481856103d3565b93506104448185602086016103e4565b61044d8161040e565b840191505092915050565b60006020820190508181036000830152610472818461041f565b905092915050565b600080600080600080608087890312156104975761049661028a565b5b600087013567ffffffffffffffff8111156104b5576104b461028f565b5b6104c189828a016102a3565b965096505060206104d489828a0161031a565b94505060406104e589828a0161033f565b935050606087013567ffffffffffffffff8111156105065761050561028f565b5b61051289828a016102a3565b92509250509295509295509295565b600081905092915050565b82818337600083830152505050565b60006105478385610521565b935061055483858461052c565b82840190509392505050565b600061056d82848661053b565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105ef57607f821691505b602082108103610602576106016105a8565b5b50919050565b7f5265636f7264206e6f7420666f756e6400000000000000000000000000000000600082015250565b600061063e6010836103d3565b915061064982610608565b602082019050919050565b6000602082019050818103600083015261066d81610631565b9050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107107fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106d3565b61071a86836106d3565b95508019841693508086168417925050509392505050565b6000819050919050565b600061075761075261074d846102f9565b610732565b6102f9565b9050919050565b6000819050919050565b6107718361073c565b61078561077d8261075e565b8484546106e0565b825550505050565b600090565b61079a61078d565b6107a5818484610768565b505050565b5b818110156107c9576107be600082610792565b6001810190506107ab565b5050565b601f82111561080e576107df816106ae565b6107e8846106c3565b810160208510156107f7578190505b61080b610803856106c3565b8301826107aa565b50505b505050565b600082821c905092915050565b600061083160001984600802610813565b1980831691505092915050565b600061084a8383610820565b9150826002028217905092915050565b6108648383610674565b67ffffffffffffffff81111561087d5761087c61067f565b5b61088782546105d7565b6108928282856107cd565b6000601f8311600181146108c157600084156108af578287013590505b6108b9858261083e565b865550610921565b601f1984166108cf866106ae565b60005b828110156108f7578489013582556001820191506020850194506020810190506108d2565b868310156109145784890135610910601f891682610820565b8355505b6001600288020188555050505b50505050505050565b600061093683856103d3565b935061094383858461052c565b61094c8361040e565b840190509392505050565b610960816102f9565b82525050565b6002811061097757610976610579565b5b50565b600081905061098882610966565b919050565b60006109988261097a565b9050919050565b6109a88161098d565b82525050565b600060808201905081810360008301526109c981888a61092a565b90506109d86020830187610957565b6109e5604083018661099f565b81810360608301526109f881848661092a565b905097965050505050505056fea26469706673582212202600277c638ffc4fc948159d33e31ee91b3a2fb637dc48179135655d48b0b06d64736f6c63430008130033";

type TrafficStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TrafficStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TrafficStorage__factory extends ContractFactory {
  constructor(...args: TrafficStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TrafficStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TrafficStorage__factory {
    return super.connect(runner) as TrafficStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrafficStorageInterface {
    return new Interface(_abi) as TrafficStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TrafficStorage {
    return new Contract(address, _abi, runner) as unknown as TrafficStorage;
  }
}
